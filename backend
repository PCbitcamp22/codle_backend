# Takes in a string from front end and runs it with exec
# Need to account for malicious input 

def execInput(self, f: str):
    self.f = f
    exec(f, globals)


# Each question has 6 test function parameters as functions
# There will be ONE question for each day.
# correctOutput MUST have length 6 (to match the 6 test functions)
# text is the question/problem text i.e. create a function that returns the ....

class question():
    def __init__(self, text: str, correctOutput: list, fun1, fun2, fun3, fun4, fun5, fun6):
        self.text = text
        self.correctOutput = correctOutput
        self.tests = [fun1, fun2, fun3, fun4, fun5, fun6]

    def getText(self):
        return self.text

    def getCorrectOutput(self):
        print(self.getCorrectOutput())

    def testOutput(self):
        execInput()
        self.outputList = []
        for i in range(len(correctOutput)):
            try:
                self.outputList[i] = tests[i]()
            except:
                #catch exception
                pass
    
    def getOutPutList(self):
        return self.outputList



            



# test function for each 
def q1_test1():



